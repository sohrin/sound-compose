# 「git tag vX.Y.Z」→「git push origin --tags」をトリガーにビルド・リリースする。

# TODO: runコマンド内容をMakefile化 テスト、カバレッジ取得（、定期ビルド）：https://qiita.com/dalance/items/66d97c252b8dd9c96c29

name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  build_and_release:
    name: build and release sound-compose.
    # TODO: クロスコンパイル
    strategy:
      matrix:
        target:
#          - x86_64-unknown-linux-gnu
          - x86_64-pc-windows-msvc
#          - x86_64-apple-darwin
        include:
#          - target: x86_64-unknown-linux-gnu
#            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
#          - target: x86_64-apple-darwin
#            os: macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Install Rust Toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          # TODO: クロスコンパイル
          #args: --release --target=${{ matrix.target }}
          args: --release

      - name: Zip output
        # TODO: sound-composeフォルダに包んだほうが良いかも？
        # TODO: クロスコンパイル（target/${{ matrix.target }}/release）、Linuxコマンド（exeいらなさそう、WinとLinuxでifを使って実行コマンドを変える必要あり？）：zip --junk-paths sound-compose-${{ matrix.target }} target/release/sound-compose{,.exe}
        run: |
          move target\release\sound-compose.exe .
          7z a sound-compose-${{ matrix.target }}.zip sound-compose.exe
      - name: Create release
        id: create_release
        uses: actions/create-release@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          # TODO: クロスコンパイル（target/${{ matrix.target }}/release）
          asset_path: sound-compose-${{ matrix.target }}.zip
          # TODO: バージョン名
          asset_name: sound-compose-${{ matrix.target }}.zip
          asset_content_type: application/zip